apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "kafka.fullname" . }}
  labels:
    app: {{ include "kafka.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    component: "{{ .Values.name }}"
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: {{ template "kafka.fullname" . }}-headless
  replicas: {{ default 3 .Values.Replicas }}
  template:
    metadata:
      labels:
        app: {{ include "kafka.name" . | quote }}
        release: {{ .Release.Name | quote }}
        component: "{{ .Values.name }}"
    spec:
      containers:
      - name: {{ template "kafka.name" . }}-broker
        image: "{{ .Values.Image }}:{{ .Values.ImageTag }}"
        imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
        livenessProbe:
          exec:
            command:
              - bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Release.Name }}-zookeeper:2181"
              - --list
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Release.Name }}-zookeeper:2181"
              - --list
          initialDelaySeconds: 60
          timeoutSeconds: 5
        ports:
        - containerPort: 9092
          name: kafka
        resources:
{{ toYaml .Values.resources | indent 10 }}
        command:
        - sh
        - -c
        - "JMX_PORT=5555 ./bin/kafka-server-start.sh config/server.properties --override zookeeper.connect={{ .Release.Name }}-zookeeper:2181/ --override zookeeper.connection.timeout.ms=60000 --override log.dirs={{ printf "%s/logs" .Values.DataDirectory }} --override broker.id=${HOSTNAME##*-}"
        env:
        - name: KAFKA_HEAP_OPTS
          value: "-Xmx8G -Xms6G"
        - name: KAFKA_JVM_PERFORMANCE_OPTS
          value: "-server -XX:MetaspaceSize=96m  -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -Djava.awt.headless=true"
        volumeMounts:
        - name: datadir
          mountPath: "{{ .Values.DataDirectory }}"
      {{- if .Values.Metrics.enabled }}
      - name: {{ .Chart.Name }}-prometheus-jmx-exporter
        image: "{{ .Values.Metrics.image.repository }}:{{ .Values.Metrics.image.tag }}"
        imagePullPolicy: {{ .Values.Metrics.image.pullPolicy }}
        ports:
        - containerPort: 5556
          name: exporter
        volumeMounts:
        - name: config-exporter
          mountPath: /usr/local/config
          readOnly: true
        resources:
{{ toYaml .Values.Metrics.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /metrics
            port: 5556
          initialDelaySeconds: 100
          periodSeconds: 10
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /metrics
            port: 5556
          initialDelaySeconds: 100
          periodSeconds: 10
          timeoutSeconds: 15
        command:
        - sh
        args:
        - -c
        - java -jar jmx_prometheus_httpserver.jar 5556 config/kafka-prometheus-monitoring.yml
      volumes:
      - name: config-exporter
        configMap:
          name: {{ template "kafka.fullname" . }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: {{ template "kafka.fullname" . }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.Storage }}
      storageClassName: {{ template "kafka.fullname" . }}
